// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-py"
  interface       = "asyncio"
  recursive_type_depth = -1
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // This is the key link to Clerk
  email     String   @unique
  createdAt DateTime @default(now())
}


// ---- Phase 2 models ----
// --- Keep the old enum in DB, expose as DeckStatus in Prisma ---
enum DeckStatus {
  uploaded
  processing
  ready
  failed

  @@map("PitchStatus")  // maps to existing DB enum type
}

// --- Deck model mapped to old "Pitch" table ---
model Deck {
  id           String      @id @default(cuid())
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  ownerClerkId String
  originalName String
  uploadPath   String

  // persona REMOVED here (it existed in "Pitch"; we'll drop the column in migration)

  status       DeckStatus  @default(uploaded)
  error        String?

  analyses     DeckAnalysis[]

  @@index([ownerClerkId])
  @@index([status])
  @@map("Pitch")          // reuse existing table "Pitch"
}

// --- DeckAnalysis mapped to existing table; FK column name stays pitchId ---
model DeckAnalysis {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  deckId    String   @map("pitchId")                        // Prisma field name is deckId
  deck      Deck     @relation(fields: [deckId], references: [id], onDelete: Cascade)

  resultJson Json

  @@map("DeckAnalysis")  // unchanged table name
}
